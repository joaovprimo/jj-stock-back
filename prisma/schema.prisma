generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model color {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  createdAt DateTime   @default(now()) @db.Timestamp(6)
  updatedAt DateTime   @default(now()) @db.Timestamp(6)
  products  products[]
}

model entry {
  id        Int      @id @default(autoincrement())
  number    Int      @default(autoincrement())
  productId Int
  quantity  Int
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  products  products @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model fiscalNote {
  id          Int        @id @default(autoincrement())
  number      Int        @unique
  providerId  Int        @unique
  receiveDate DateTime   @db.Date
  createdAt   DateTime   @default(now()) @db.Timestamp(6)
  updatedAt   DateTime   @default(now()) @db.Timestamp(6)
  products    products[]
}

model products {
  id           Int        @id @default(autoincrement())
  name         String
  numberRef    Int        @unique
  sizeId       Int
  providerId   Int
  fiscalNoteId Int
  stockId      Int
  quantity     Int
  description  String
  minimun      Int
  colorId      Int
  createdAt    DateTime   @default(now()) @db.Timestamp(6)
  updatedAt    DateTime   @default(now()) @db.Timestamp(6)
  entry        entry[]
  color        color      @relation(fields: [colorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  fiscalNote   fiscalNote @relation(fields: [fiscalNoteId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  provider     provider   @relation(fields: [providerId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  size         size       @relation(fields: [sizeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  stock        stock      @relation(fields: [stockId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sell         sell[]
}

model provider {
  id        Int        @id @default(autoincrement())
  name      String
  cnpj      Int        @unique
  createdAt DateTime   @default(now()) @db.Timestamp(6)
  updatedAt DateTime   @default(now()) @db.Timestamp(6)
  products  products[]
}

model sell {
  id        Int      @id @default(autoincrement())
  number    Int      @default(autoincrement())
  productId Int      @default(autoincrement())
  date      DateTime @db.Date
  quantity  Int
  value     Int?
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  products  products @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model size {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  createdAt DateTime   @default(now()) @db.Timestamp(6)
  updatedAt DateTime   @default(now()) @db.Timestamp(6)
  products  products[]
}

model stock {
  id        Int        @id @default(autoincrement())
  storesId  Int
  createdAt DateTime   @default(now()) @db.Timestamp(6)
  updatedAt DateTime   @default(now()) @db.Timestamp(6)
  products  products[]
  stores    stores     @relation(fields: [storesId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model stores {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  cnpj      String      @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  stock     stock[]
}
